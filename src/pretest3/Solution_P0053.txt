10
0 1
2 0
2 2
19 11
88 77
20 20
982 248
947 991
897 907
1000 1000




고대 왕국의 공주가 결혼할 나이가 되어, 공주와 결혼하려는 기사들이 모여들었다. 기사들이 서로 싸우고 있었기 때문에 왕은 아이디어를 냈다. 
기사들은 백마를 탄 기사들 W 명과 흑마를 탄 기사들 B 명이 있었는데, 이들 중 두명을 무작위로 뽑는 것을 반복하기로 했다. 

여기서 무작위라고 하는 것은 모든 기사가 두명에 포함될 확률이 동일하다는 것이다. 

다음 규칙에 따라 정해진 기사들은 결혼을 포기하고 집으로 돌아가야 한다.


1. 뽑힌 두 명이 같은 색의 말을 타고 있으면 두 명 중 한명이 집에 가고, 다른 한 명은 남아서 다음 번 뽑기의 대상이 된다. 
2. 뽑힌 두 명이 다른 색의 말을 타고 있으면 두 명 모두 집에 가야 한다. 


이 규칙을 기사가 한명이 남거나 없을 때까지 반복하고, 마지막에 남는 기사는 공주와 결혼한다. 
마지막에 남는 기사가 없는 경우 공주는 내년에 결혼을 할 것이다.

백마를 탄 기사의 흑마를 탄 기사의 수를 입력 받아, 백마를 탄 기사가 공주와 결혼할 확률, 흑마를 탄 기사가 공주와 결혼할 확률, 그리고 공주가 내년으로 결혼을 미룰 확률을 계산하는 프로그램을 작성하라. 





[입력]  
첫 줄에 테스트 케이스의 수 T가 주어진다. 각 케이스는 단 한 줄이며 백마를 탄 기사의 수 W와 흑마를 탄 기사의 수 B가 주어진다. (0 ≤ W, B ≤1,000, 단, W+B>0)




[출력]  
각 테스트 케이스의 답을 순서대로 표준출력으로 출력하며, 각 케이스마다 줄의 시작에 “#x”를 출력하여야 한다. 이때 x는 케이스의 번호이다. 

같은 줄에, 백마를 탄 기사가 공주와 결혼할 확률, 흑마를 탄 기사가 공주와 결혼할 확률, 그리고 공주가 내년으로 결혼을 미룰 확률을 출력한다.




[주의]

본 문제는 실수형 변수의 유효숫자 오류가 발생할 수 있다. 따라서 오차가 발생하였다 하더라도 그 오차가 10-6 이하이면 정답 처리될 것이다.

소수점 이하 출력의 자릿수는 상관이 없다.




[입출력 예] 
(입력) 
3                                              ← 3 test cases in total 
0 1                                           ← 1st case 
1 1                                           ← 2nd case 
2 2                                           ← 3rd case




(출력) 
#1 0.0000000 1.0000000 0.0000000 
#2 0.0000000 0.0000000 1.0000000 
#3 0.1111111 0.1111111 0.7777778




['출력 예'에 대한 설명] 
1번 케이스의 경우 #1 0.0 1.0 0.0 으로 출력해도 정답으로 처리된다.

하지만 3번 케이스의 경우 #3 0.11 0.11 0.78 로 출력하면 허용 오차범위를 초과하므로 오답 처리된다. 


(sample_input.txt 에 대한 출력) 
#1 0.0000000000000 1.0000000000000 0.0000000000000 
#2 1.0000000000000 0.0000000000000 0.0000000000000 
#3 0.1111111111111 0.1111111111111 0.7777777777778 
#4 0.7572152553516 0.0291820777528 0.2136026668955 
#5 0.5040124813478 0.1570242759882 0.3389632426640 
#6 0.2903611284817 0.2903611284817 0.4192777430366 
#7 0.9987688563035 0.0000015012242 0.0012296424722 
#8 0.2081372482660 0.4596145098515 0.3322482418825 
#9 0.2944700221868 0.3557400418610 0.3497899359522 
#10 0.3248951733138 0.3248951733138 0.3502096533725 
