2
3
2 4 6
8
3
1 4 6
8




[교육A-0011] 동전 교환
N 동전수, W 만들어야하는 가격
- C [i] = 입력받은 동전 수
- D [i][j] = C[i] 까지의 동전을 사용하고, j 원을 채우기 위한 최소 동전갯수
- 초기값 D[0][j], D[i][0] = 0
- D [i][j] = min (D[i-1][j], D[i][j-C[i]] + 1)
              (D 배열에 초기값(불가능값)이 있는 경우는 제외하고, C[i] 가 j 보다 큰 경우 
              (i 가 2이상일때)
- D [1][j] = j / C[1] (j / C[i] 의 나머지가 없을 경우에만, 아니면 불가능을 마킹한다.) 
- 정답 : D[N][W]


[문제]
삼성 나라의 동전 단위는 1원, 5원, 10원, 50원, 100원, 500원의 6단계로 이루어진다. 잔돈 256원을 내어주려면, 100원짜리 동전 2개, 50원짜리 동전1개, 5원짜리 동전 1개, 1원짜리 동전 1개로해서 총 5개의 동전이 필요하다.

만약 동전 단위가 1원, 4원, 6원의 3단계로 이루어진 나라에서 잔돈 8원을 내어주려면 6원짜리 동전 1개, 1원짜리 동전 2개로해서 총 3개의 동전으로 거슬러 주는 방법이 있고, 4원짜리 동전 2개로 거슬러 주는 방법도 가능하다. 전자의 경우에는 동전이 3개 필요한 반면에 후자의 경우에는 동전이 2개만 필요하다.

동전들의 단위가 주어지고, 원하는 잔돈이 주어졌을 때, 그 잔돈에 맞추기 위해 필요한 동전의 최소 개수를 구하는 프로그램을 작성하시오. 단, 동전의 개수는 무한하다.




[입력]
입력은 여러 개의 테스트케이스로 이루어져 있다. 입력의 첫째 줄에는 테스트케이스의 수 T가 주어지고, 이후 차례로 각 테스트케이스가 주어진다. (1 ≤ T ≤ 10)
각 테스트케이스의 첫 줄에 동전 단위의 수 N이 주어진다. (1 ≤ N ≤ 10)
둘째 줄에 각 동전들의 단위를 나타내는 자연수 N개가 공백으로 구분되어 주어진다. 각 동전들의 단위는 64,000보다 크지 않다.
셋째 줄에 거슬러 주어야하는 잔돈 W가 주어진다. (1 ≤ W ≤ 64,000)




[출력]
각 테스트케이스 마다 줄의 시작에 “#x”를 출력한다. 이 때, x는 1부터 시작하는 테스트케이스의 번호다. 같은 줄에 잔돈을 거슬러 주기 위해 필요한 동전의 최소 개수를 출력한다. 잔돈을 거슬러 주는 것이 불가능한 경우는 없다.




[입출력 예]
(입력)
1
3
1 4 6
8




(출력)
#1 2
