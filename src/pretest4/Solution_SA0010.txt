1
5 5
1 1 0 1 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 1
1 0 0 0 0




가장 큰 정사각형
- A[i][j] = 최초 입력 받은 배열
- D[i][j] = A[i][j] 까지 사용해서 가장 큰 정사각형
- A[i][j] 가 0이 아닌 경우엔 A[i][j] 를 이용해서 정사각형을 절대 못만듬으로,
  D[i][j] 는 0이다.
- A[i][j] 가 0인 경우에는 나의 왼쪽이나, 윗쪽, 대각선 왼쪽위 3지점의 D 값 중 가장 작은 값을 찾아서 + 1 한다.
  (내 왼쪽이나 윗쪽에 있는 모든 D 값들중에 하나라도 0이라면, D[i][j]는 1이 될수 밖에 없음
  D[i][j] = min (D[i-1][j], D[i][j-1] , D[i-1][j-1]) + 1 (A[i][j] 가 0 일때)



[문제]
아래 그림처럼 NⅹM 크기의 격자판에 0 또는 1이 적혀 있다.

이 격자판에서 0으로만 이루어진 부분 정사각형 중 가장 큰 정사각형을 찾는 프로그램을 작성하시오.

1 1 0 1 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 1
1 0 0 0 0


[입력]
입력은 여러 개의 테스트케이스로 이루어져 있다. 입력의 첫째 줄에는 테스트케이스의 수 T가 주어지고, 이후 차례로 각 테스트케이스가 주어진다. (1 ≤ T ≤ 30)
각 테스트케이스의 첫 줄에 격자판의 크기 N, M이 공백으로 구분되어 주어진다. (1 ≤ N, M ≤ 1,000)
그 다음 N개의 줄에 걸쳐 격자판에 적힌 수 M개가 공백으로 구분되어 주어진다. 입력의 i+1번째 줄에는 i번째 행에 적힌 수들이 순서대로 주어진다.




[출력]
각 테스트케이스 마다 줄의 시작에 “#x”를 출력한다. 이 때, x는 1부터 시작하는 테스트케이스의 번호다. 같은 줄에 0으로만 이루어진 부분 정사각형 중 가장 큰 정사각형의 한 변 길이를 출력한다. 만약, 그러한 정사각형이 없다면 0을 출력한다.




[입출력 예]
(입력)
1
5 5
1 1 0 1 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 1
1 0 0 0 0




(출력)
#1 3
