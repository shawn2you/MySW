import java.io.*;
import java.util.*;
 
public class Solution {
    static int T, N;
    static int[] A = new int[1000000]; // input
    static int[] left = new int[1000000];
    static int[] right = new int[1000000];
    static int K;
    static int Answer;
      
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        T = Integer.parseInt(br.readLine());
         
        for(int test_case = 1; test_case <= T; test_case++) {
            N = Integer.parseInt(br.readLine());
             
            StringTokenizer st = new StringTokenizer(br.readLine());
             
            for(int i = 0; i < N; i++) {
                A[i] = Integer.parseInt(st.nextToken());
            }
             
            solve();
             
            bw.write("#" + test_case + " " + K + " " + Answer + "\n");
        }
        bw.flush();
        bw.close();
        br.close();
    }
     
    static void solve() {
        left[0] = A[0];
        for (int i = 1; i < N; i++) {
            left[i] = gcd(left[i-1], A[i]);
        }
         
        right[N-1] = A[N-1];
        for (int i = N-2; i >= 0; i--) {
            right[i] = gcd(right[i+1], A[i]);
        }
         
        /*
        System.out.println("=====================");
         
        for(int i = 0; i < N; i++) {
            System.out.print(A[i] + " ");
        }
        System.out.println();
         
        for(int i = 0; i < N; i++) {
            System.out.print(left[i] + " ");
        }
        System.out.println();
         
        for(int i = 0; i < N; i++) {
            System.out.print(right[i] + " ");
        }
        System.out.println();
        */
         
        K = 0; Answer = 0;
        int g;
        for (int i = 0; i < N; i++) {
            if (0 == i) {
                g = right[i+1];
            }
            else if (N - 1 == i) {
                g = left[i-1];
            }
            else {
                g = gcd(left[i-1], right[i+1]);
            }
             
            //System.out.println(g);
             
            if(0 == A[i] % g) {
                continue;
            }
             
            if(K < g) {
                K = g;
                Answer = A[i];
            }
        }   
    }
 
    static int gcd(int a, int b) {
        if (0 == b) return a;
        return gcd(b, a%b);
    }
}
